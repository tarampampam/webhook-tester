# Docker-compose file is used only for local development. This is not production-ready example
version: '3.8'

volumes:
  tmp-data: {}
  redis-data: {}
  golint-go: {}
  golint-cache: {}
  node-data: {}

services:
  app: &app # Application service (common use-case - shell)
    image: golang:1.19-buster # Image page: <https://hub.docker.com/_/golang>
    working_dir: /src
    environment: {HOME: /tmp, GOPATH: /tmp}
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - tmp-data:/tmp:rw
      - .:/src:rw
    depends_on:
      redis: {condition: service_healthy}

  web:
    <<: *app
    ports:
      - '8080:8080/tcp' # Open <http://127.0.0.1:8080>
    command: >-
      sh -c "go build -o /tmp/webhook-tester ./cmd/webhook-tester && /tmp/webhook-tester serve
        --verbose --port=8080 --storage-driver=redis --pubsub-driver=redis
        --redis-dsn=redis://redis:6379/0 --max-requests=12 --ignore-header-prefix=foo --ws-max-clients=20
        --ws-max-lifetime=1m"
    healthcheck:
      test: ['CMD-SHELL', 'wget --spider -q http://127.0.0.1:8080/live']
      interval: 5s
      timeout: 2s

  redis:
    image: redis:7-alpine # Image page: <https://hub.docker.com/_/redis>
    volumes:
      - redis-data:/data:rw
    ports:
      - '6379/tcp'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 500ms
      timeout: 1s

  golint:
    image: golangci/golangci-lint:v1.50-alpine # Image page: <https://hub.docker.com/r/golangci/golangci-lint>
    environment:
      GOLANGCI_LINT_CACHE: /tmp/golint # <https://github.com/golangci/golangci-lint/blob/v1.33.0/internal/cache/default.go#L68>
    volumes:
      - golint-go:/go:rw # go dependencies will be downloaded on each run without this
      - golint-cache:/tmp/golint:rw
      - .:/src:ro
    working_dir: /src

  node:
    image: node:19-alpine
    environment:
      PS1: '\[\033[1;32m\]\[\033[1;36m\][\u@node] \[\033[1;34m\]\w\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]'
      HOME: /tmp
      NPM_CONFIG_UPDATE_NOTIFIER: false
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - node-data:/tmp:rw
      - .:/src:rw
    working_dir: /src/web

# yaml-language-server: $schema=https://cdn.jsdelivr.net/gh/compose-spec/compose-spec@master/schema/compose-spec.json

services:
  go: &go
    build:
      target: builder
      args: [DEV_MODE=true]
    working_dir: /src
    environment:
      PS1: '\[\033[1;32m\]\[\033[1;36m\][\u@go] \[\033[1;34m\]\w\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]'
      HOME: /tmp
      GOPATH: /tmp
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - tmp-data:/tmp:rw
      - .:/src:rw
    depends_on: &go-deps
      redis: {condition: service_healthy}
    security_opt: [no-new-privileges:true]

  node: &node
    build: {target: frontend}
    environment:
      PS1: '\[\033[1;32m\]\[\033[1;36m\][\u@node] \[\033[1;34m\]\w\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]'
      HOME: /tmp
      NPM_CONFIG_UPDATE_NOTIFIER: false
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - node-data:/tmp:rw
      - .:/src:rw
    working_dir: /src/web
    security_opt: [no-new-privileges:true]

  web:
    <<: *go
    ports: ['8080:8080/tcp'] # Open <http://127.0.0.1:8080>
    command: >-
      go run -tags watch ./cmd/webhook-tester/ serve
        --port=8080 --storage-driver=redis --pubsub-driver=redis
        --redis-dsn=redis://redis:6379/0 --max-requests=12 --ignore-header-prefix=x-test-foo --ws-max-clients=20
        --ws-max-lifetime=1m
    healthcheck:
      test: ['CMD-SHELL', 'wget --spider -q http://127.0.0.1:8080/ready']
      start_period: 5s
      interval: 5s
      retries: 5
    depends_on:
      <<: *go-deps
      node-watch: {condition: service_healthy}

  node-watch:
    <<: *node
    command: npm run watch
    healthcheck:
      test: ['CMD-SHELL', 'test -d ./dist']
      interval: 3s
      start_period: 5s
      retries: 20

  redis:
    image: redis:7-alpine
    volumes: [redis-data:/data:rw]
    ports: ['6379/tcp']
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 500ms
      timeout: 1s
    security_opt: [no-new-privileges:true]

  golint:
    image: golangci/golangci-lint:v1.60-alpine # Image page: <https://hub.docker.com/r/golangci/golangci-lint>
    environment:
      GOLANGCI_LINT_CACHE: /tmp/golint # <https://github.com/golangci/golangci-lint/blob/v1.33.0/internal/cache/default.go#L68>
    volumes:
      - golint-go:/go:rw # go dependencies will be downloaded on each run without this
      - golint-cache:/tmp/golint:rw
      - .:/src:ro
    working_dir: /src
    security_opt: [no-new-privileges:true]

  hurl:
    image: ghcr.io/orange-opensource/hurl:5.0.1
    entrypoint: ""
    command: sh -c "hurl --color --test --variable host=web --variable port=8080 ./test/hurl/*/*.hurl"
    volumes: [.:/src:ro]
    working_dir: /src
    depends_on:
      web: {condition: service_healthy}
    security_opt: [no-new-privileges:true]

volumes:
  tmp-data: {}
  redis-data: {}
  golint-go: {}
  golint-cache: {}
  node-data: {}

# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

name: ðŸ§ª Tests

on:
  workflow_dispatch: {}
  push:
    branches: [master, main]
    paths-ignore: ['**.md']
    tags-ignore: ['**']
  pull_request:
    paths-ignore: ['**.md']

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  git-leaks:
    name: Check for GitLeaks
    runs-on: ubuntu-latest
    steps:
      - {uses: actions/checkout@v4, with: {fetch-depth: 0}}
      - uses: gacts/gitleaks@v1

  lint-and-test:
    name: Test and lint (backend)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - {uses: actions/setup-go@v5, with: {go-version-file: go.mod}}
      - run: go install "github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@v2.4.1"
      - run: go generate -skip readme ./...
      - uses: golangci/golangci-lint-action@v6
      - run: go test -race -covermode=atomic ./...

  lint-and-test-web:
    name: Test and lint (web)
    runs-on: ubuntu-latest
    env: {FORCE_COLOR: 'true', NPM_PREFIX: './web'}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: {node-version: 22, cache: 'npm', cache-dependency-path: ./web/package-lock.json}
      - run: npm --prefix "$NPM_PREFIX" install -dd --no-audit
      - run: npm --prefix "$NPM_PREFIX" run generate
      - run: npm --prefix "$NPM_PREFIX" run lint
      - run: npm --prefix "$NPM_PREFIX" run test
      - run: npm --prefix "$NPM_PREFIX" run build

  build-app:
    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
    needs: [lint-and-test, lint-and-test-web]
    steps:
      - uses: actions/checkout@v4
      - {uses: actions/setup-go@v5, with: {go-version-file: go.mod}}
      - run: go install "github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@v2.4.1"
      - run: go generate -skip readme ./...
      - {uses: gacts/github-slug@v1, id: slug}
      - env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
          LDFLAGS: -s -w -X gh.tarampamp.am/webhook-tester/v2/internal/appmeta.version=${{ steps.slug.outputs.commit-hash-short }}
        run: go build -trimpath -ldflags "$LDFLAGS" -o ./webhook-tester ./cmd/webhook-tester/
      - if: matrix.os == runner.os && matrix.arch == 'amd64'
        run: ./webhook-tester --version && ./webhook-tester -h

  build-docker-image:
    name: Build the docker image
    runs-on: ubuntu-latest
    needs: [lint-and-test, lint-and-test-web]
    steps:
      - uses: actions/checkout@v4

      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: app:local
